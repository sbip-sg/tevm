name: Release

on:
  push:
    tags:
      - '*'

  workflow_dispatch:  # Allow manual triggering (optional)
    inputs:
      tag_name:
        description: 'Tag to create a release for'
        required: true
        default: ''

jobs:
  release:
    name: Build and publish binaries

    runs-on: ubuntu-focal

    steps:

    - uses: actions/checkout@v3                 # Git toolchain to check out code
      with:
        submodules: 'recursive'

    - name: Get OS infomration
      id: os
      run: echo "KERNEL=$(uname -r)" >> $GITHUB_OUTPUT

    - uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.tinyevm/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-${{steps.os.outputs.KERNEL}}-${{ hashFiles('**/Cargo.toml') }}


    - uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'

    - name: Install Python dependencies
      run: pip install -r requirements-dev.txt

    - name: Build with file system cache
      run: |
        maturin build --release -i 3.9 -o _fs

    - name: Make _out directory
      run: |
        mkdir -p _out

    - name: Rename .whl files
      run: |
        for file in _fs/*.whl; do
            filename=$(basename "$file")
            mv "$file" "_out/${filename%.whl}_fs.whl"
        done

    - name: Build with redis cache
      run: |
        maturin build --release -i 3.9 --cargo-extra-args="--features redis" -o _redis

    - name: Rename .whl files
      run: |
        for file in _redis/*.whl; do
            filename=$(basename "$file")
            mv "$file" "_out/${filename%.whl}_redis.whl"
        done

    - name: Create GitHub Release
      id: create_release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ github.ref_name || github.event.inputs.tag_name }}  # Use the tag name from the push event or the manual input
        artifacts: "_out/*_redis.whl,_out/*_fs.whl"
