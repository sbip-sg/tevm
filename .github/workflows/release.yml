name: Release

on:
  push:
    tags:
      - '*'

jobs:
  release:
    name: Build and publish binaries

    runs-on: ubuntu-latest

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:

    - uses: actions/checkout@v3                 # Git toolchain to check out code
      with:
        submodules: 'recursive'

    - uses: actions-rs/toolchain@v1             # Rust toolchain

    - name: Get OS infomration
      id: os
      run: echo "KERNEL=$(uname -r)" >> $GITHUB_OUTPUT

    - uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.tinyevm/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-${{steps.os.outputs.KERNEL}}-${{ hashFiles('**/Cargo.toml') }}

    - uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: |
          ${{ secrets.SSH_PRIVATE_KEY_RUST_EVM }}
          ${{ secrets.SSH_PRIVATE_KEY_REVM }}

    - uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'

    - name: Install Python dependencies
      run: pip install -r requirements-dev.txt

    - name: Build with file system cache
      run: |
        maturin build --release -i 3.9 -o _fs

    - name: Make _out directory
      run: |
        mkdir -p _out

    - name: Rename .whl files
      run: |
        for file in _fs/*.whl; do
            filename=$(basename "$file")
            mv "$file" "_out/${filename%.whl}_fs.whl"
        done

    - name: Build with redis cache
      run: |
        maturin build --release -i 3.9 --cargo-extra-args="--features provider_cache_redis" -o _redis

    - name: Rename .whl files
      run: |
        for file in _redis/*.whl; do
            filename=$(basename "$file")
            mv "$file" "_out/${filename%.whl}_redis.whl"
        done

    - name: Read .release-note and use it as a body of new release
      id: read_release
      shell: bash
      run: |
        r=$(cat .release-note)
        r="${r//'%'/'%25'}"
        r="${r//$'\n'/'%0A'}"
        r="${r//$'\r'/'%0D'}"
        echo "::set-output name=RELEASE_BODY::$r"

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: _out/*.whl
        file_glob: true
        tag: ${{ github.ref }}
        overwrite: true
        body: |
          ${{ steps.read_release.outputs.RELEASE_BODY }}
