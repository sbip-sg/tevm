name: Test on PR

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:


env:
  CARGO_TERM_COLOR: always
  SSH_AUTH_SOCK: /tmp/ssh_agent.sock
  TINYEVM_CI_TESTS: true

jobs:
  Test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'

    - name: Set up Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy, llvm-tools-preview

    - name: Get OS infomration
      id: os
      run: echo "KERNEL=$(uname -r)" >> $GITHUB_OUTPUT

    - uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-${{steps.os.outputs.KERNEL}}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ hashFiles('**/Cargo.toml') }}

    - uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
        architecture: x64

    - uses: taiki-e/install-action@cargo-llvm-cov
    - uses: taiki-e/install-action@nextest

    - name: Install Python dependencies
      run: pip install -r requirements-dev.txt

    - name: Check code formatting
      run: cargo +stable fmt

    - name: Check code linting
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Check documentation linting
      run: cargo doc --no-deps --all-features

    - name: Run Rust tests
      run: cargo nextest run

    - name: Install as local Python package
      uses: PyO3/maturin-action@v1
      with:
        target: x86_64
        args: --release

    - name: Install built wheel and run Python tests
      run: |
        pip install target/wheels/*.whl --force-reinstall
        pytest
